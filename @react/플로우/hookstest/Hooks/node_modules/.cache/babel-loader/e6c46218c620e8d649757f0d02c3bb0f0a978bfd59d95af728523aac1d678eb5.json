{"ast":null,"code":"var _jsxFileName = \"E:\\\\2023\\\\@react\\\\\\uD50C\\uB85C\\uC6B0\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\2.state\\\\state1.js\",\n  _s = $RefreshSig$();\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /* \r\n    문제 1.\r\n      state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n      아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n\n  console.log(PlayListMock.playlist);\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\n\n  // input에 데이터를 받기위한 저장소 1개 \n  // map을이용해서 배열의 객체를 개별 객체로 분활 \n  // 핸들 이벤트 두개 동작 추가 / 삭제로 버튼은 각 한번씩 동작 --> true false가 필요 --> state 하나 \n  // 추가 이벤트  --> return으로 div를 반환하면 된다. \n  // 삭제 이벤트  --> 삭제 filter 사용 \n\n  // const [isBoolean, setIsBoolean] = useState(false);\n  const [isInputValue, setIsInputValue] = useState(PlayListMock);\n  const onAddPlayList = e => {\n    const newArr = {\n      title: e.target.title.value,\n      signer: e.target.signer.value\n    };\n    setIsInputValue(...isInputValue, newArr);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Summer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Joe Hisaishi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACE1\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          title: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC00\\uC218/\\uC791\\uACE1 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          signer: \"signer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddPlayList,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(State1, \"keLtKTjYO7fDqARGGD+IK0KyGlI=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["PlayListMock","useState","State1","console","log","playlist","isInputValue","setIsInputValue","onAddPlayList","e","newArr","title","target","value","signer"],"sources":["E:/2023/@react/플로우/hookstest/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import PlayListMock from \"../../__mock__/playList.json\";\r\nimport {useState} from 'react'\r\nfunction State1() {\r\n  /* \r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n\r\n  console.log(PlayListMock.playlist);\r\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\r\n\r\n  // input에 데이터를 받기위한 저장소 1개 \r\n  // map을이용해서 배열의 객체를 개별 객체로 분활 \r\n  // 핸들 이벤트 두개 동작 추가 / 삭제로 버튼은 각 한번씩 동작 --> true false가 필요 --> state 하나 \r\n  // 추가 이벤트  --> return으로 div를 반환하면 된다. \r\n  // 삭제 이벤트  --> 삭제 filter 사용 \r\n\r\n  // const [isBoolean, setIsBoolean] = useState(false);\r\n  const [isInputValue, setIsInputValue] = useState(PlayListMock);\r\n  const onAddPlayList = (e) => {\r\n    const newArr = {\r\n      title : e.target.title.value, \r\n      signer: e.target.signer.value,\r\n    }\r\n\r\n    setIsInputValue(...isInputValue, newArr)\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <ul>\r\n        {/* list */}\r\n        {/* 예시 데이터입니다 */}\r\n        <li>\r\n          <h3>Summer</h3>\r\n          <p>Joe Hisaishi</p>\r\n        </li>\r\n      </ul>\r\n      <div>\r\n        <p>\r\n          곡명 : <input title={\"title\"}/>\r\n        </p>\r\n        <p>\r\n          가수/작곡 : <input signer={\"signer\"} />\r\n        </p>\r\n        <p>\r\n          <button onClick={onAddPlayList}>추가</button>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default State1;\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,8BAA8B;AACvD,SAAQC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAC9B,SAASC,MAAM,GAAG;EAAA;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;;EAIEC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACK,QAAQ,CAAC;EAClC;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAACD,YAAY,CAAC;EAC9D,MAAMQ,aAAa,GAAIC,CAAC,IAAK;IAC3B,MAAMC,MAAM,GAAG;MACbC,KAAK,EAAGF,CAAC,CAACG,MAAM,CAACD,KAAK,CAACE,KAAK;MAC5BC,MAAM,EAAEL,CAAC,CAACG,MAAM,CAACE,MAAM,CAACD;IAC1B,CAAC;IAEDN,eAAe,CAAC,GAAGD,YAAY,EAAEI,MAAM,CAAC;EAE1C,CAAC;EAID,oBACE;IAAA,wBACE;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,uBAGE;QAAA,wBACE;UAAA,UAAI;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACf;UAAA,UAAG;QAAY;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IAChB;MAAA;MAAA;MAAA;IAAA,QACF,eACL;MAAA,wBACE;QAAA,WAAG,iBACI;UAAO,KAAK,EAAE;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3B,eACJ;QAAA,WAAG,8BACO;UAAO,MAAM,EAAE;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eACJ;QAAA,uBACE;UAAQ,OAAO,EAAEF,aAAc;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACzC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACL;AAEP;AAAC,GA1DQN,MAAM;AAAA,KAANA,MAAM;AA2Df,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}