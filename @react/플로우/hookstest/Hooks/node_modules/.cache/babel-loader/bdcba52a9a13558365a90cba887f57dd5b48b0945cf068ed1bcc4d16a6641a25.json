{"ast":null,"code":"var _jsxFileName = \"E:\\\\2023\\\\@react\\\\\\uD50C\\uB85C\\uC6B0\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\1.basic\\\\q3.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Q3components from \"../../components/1.basic/q3components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q3() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [btn, setBtn] = useState(false); // 뭔가를 보이고 안보이게 하고싶을떄 state에 불린값 넣어서 사용한다. \n\n  const OnStart = () => {\n    _s();\n    setBtn(prev => !prev);\n    useEffect(() => {});\n  };\n  _s(OnStart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const OnStop = () => {\n    return;\n  };\n  /* \r\n    문제3\r\n    useEffect useState에 관련한 문제입니다\r\n    단체 줄넘기 대회에 출전하였습니다\r\n      줄넘기 시작 버튼을 누르면  ---> 클릭 이벤트 발생 \r\n    Q3components 컴포넌트가 보입니다. ---> \r\n      Q3components 내부에는\r\n      해당 컴포넌트가 보이기 시작한 시점부터 보이기 시작한 시점부터 ( 마운트에대한 이야기 )\r\n    2초마다 줄넘기 횟수가 1회 씩 증가하는 비즈니스 로직이 존재합니다 ---> 시간마다 줄넘기횟수 증가 \r\n      또한, 이러한 줄넘기 횟수 증가는 q3.js(index)에서도 확인할 수 있도록 --. 상태변화가 필요하다. \r\n    <p> 줄넘기 횟수 : 0 </p> 에 횟수로 표시됩니다\r\n      줄넘기 중지 버튼을 누르면  ---> 클릭 이벤트 발생 \r\n    해당 컴포넌트는 보이지 않아야하며, 줄넘기 횟수도 더이상 증가해서는 안됩니다.ㅠ --. 마운트 종료에대한 이벤트 \r\n    또한, 줄넘기 횟수는 0으로 고정되어야합니다.--> state 초기화 \r\n      이벤트 총 마운트 / 언마운트 \r\n    스테이트 1개 \r\n    effect 2개 \r\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \\uC904\\uB118\\uAE30 \\uD69F\\uC218 : \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), btn && /*#__PURE__*/_jsxDEV(Q3components, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: OnStart,\n          children: \"\\uC904\\uB118\\uAE30 \\uC2DC\\uC791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: OnStop,\n          children: \"\\uC904\\uB118\\uAE30 \\uC911\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(Q3, \"5HVzkiWwvAibwgmUlKJIn7mZLiQ=\");\n_c = Q3;\nexport default Q3;\nvar _c;\n$RefreshReg$(_c, \"Q3\");","map":{"version":3,"names":["useEffect","useState","Q3components","Q3","btn","setBtn","OnStart","prev","OnStop","count"],"sources":["E:/2023/@react/플로우/hookstest/Hooks/src/hooks/1.basic/q3.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Q3components from \"../../components/1.basic/q3components\";\r\n\r\nfunction Q3() {\r\n\r\n  const [btn, setBtn] = useState(false);   // 뭔가를 보이고 안보이게 하고싶을떄 state에 불린값 넣어서 사용한다. \r\n\r\n\r\n  \r\n\r\n\r\n  const OnStart = () => {\r\n    setBtn((prev) => !prev)\r\n\r\n    useEffect(() => {\r\n    })\r\n  }\r\n\r\n\r\n  const OnStop = () => {\r\n    return\r\n  }\r\n  /* \r\n    문제3\r\n    useEffect useState에 관련한 문제입니다\r\n    단체 줄넘기 대회에 출전하였습니다\r\n\r\n    줄넘기 시작 버튼을 누르면  ---> 클릭 이벤트 발생 \r\n    Q3components 컴포넌트가 보입니다. ---> \r\n\r\n    Q3components 내부에는\r\n\r\n    해당 컴포넌트가 보이기 시작한 시점부터 보이기 시작한 시점부터 ( 마운트에대한 이야기 )\r\n    2초마다 줄넘기 횟수가 1회 씩 증가하는 비즈니스 로직이 존재합니다 ---> 시간마다 줄넘기횟수 증가 \r\n\r\n    또한, 이러한 줄넘기 횟수 증가는 q3.js(index)에서도 확인할 수 있도록 --. 상태변화가 필요하다. \r\n    <p> 줄넘기 횟수 : 0 </p> 에 횟수로 표시됩니다\r\n\r\n    줄넘기 중지 버튼을 누르면  ---> 클릭 이벤트 발생 \r\n    해당 컴포넌트는 보이지 않아야하며, 줄넘기 횟수도 더이상 증가해서는 안됩니다.ㅠ --. 마운트 종료에대한 이벤트 \r\n    또한, 줄넘기 횟수는 0으로 고정되어야합니다.--> state 초기화 \r\n\r\n    이벤트 총 마운트 / 언마운트 \r\n    스테이트 1개 \r\n    effect 2개 \r\n  */\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>문제3</h1>\r\n      <div>\r\n        <p> 줄넘기 횟수 : {count} </p>  \r\n        {btn && <Q3components />}\r\n        <p>\r\n          <button onClick={OnStart}>줄넘기 시작</button>\r\n        </p>\r\n        <p>\r\n          <button onClick={OnStop}>줄넘기 중지</button>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q3;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,uCAAuC;AAAC;AAAA;AAEjE,SAASC,EAAE,GAAG;EAAA;EAAA;EAEZ,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAG;;EAMzC,MAAMK,OAAO,GAAG,MAAM;IAAA;IACpBD,MAAM,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;IAEvBP,SAAS,CAAC,MAAM,CAChB,CAAC,CAAC;EACJ,CAAC;EAAA,GALKM,OAAO;EAQb,MAAME,MAAM,GAAG,MAAM;IACnB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAUE,oBACE;IAAA,wBACE;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,wBACE;QAAA,WAAG,qCAAU,EAACC,KAAK,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,EACxBL,GAAG,iBAAI,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eACxB;QAAA,uBACE;UAAQ,OAAO,EAAEE,OAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACvC,eACJ;QAAA,uBACE;UAAQ,OAAO,EAAEE,MAAO;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACL;AAEP;AAAC,IA7DQL,EAAE;AAAA,KAAFA,EAAE;AA8DX,eAAeA,EAAE;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}