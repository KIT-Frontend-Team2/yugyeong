{"ast":null,"code":"var _jsxFileName = \"E:\\\\2023\\\\@react\\\\\\uD50C\\uB85C\\uC6B0\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\1.basic\\\\q1.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n      1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n          만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n      1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n          button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n          반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n    */\n\n  const [text, setText] = useState(false); // 상태관리 필요한 요소들을 초기값으로 저장\n\n  const onChange = e => {\n    const inputValue = e.target.value;\n    const inPlace = e.target.placeholder;\n    inputValue === inPlace ? setText(true) : setText(false);\n  };\n  const Message = styled.p`\n  color: ${{\n    text\n  } ? \"#f46056\" : \"#f5f5f5\"}\n`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"김성용\",\n        style: {\n          textAlign: \"center\"\n        },\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Message, {\n        children: [\" \", text === true ? `올바르게 입력하셨습니다.` : `올바르게 입력해주세요`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uBCF4\\uC774\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uC774 \\uBB38\\uAD6C\\uB294 \\uBCF4\\uC774\\uAE30 \\uC0C1\\uD0DC\\uC77C \\uB54C\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"mzMPfv2J1dglX3giriQ6Qr64n0U=\");\n_c = Q1;\nexport default Q1;\nconst S = {\n  Message\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["React","useState","styled","Q1","text","setText","onChange","e","inputValue","target","value","inPlace","placeholder","Message","p","textAlign","S"],"sources":["E:/2023/@react/플로우/hookstest/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Q1() {\r\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n\r\n\r\n  const [text, setText] = useState(false); // 상태관리 필요한 요소들을 초기값으로 저장\r\n\r\n\r\n  const onChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const inPlace = e.target.placeholder;\r\n\r\n    (inputValue === inPlace) ? setText(true) : setText(false);\r\n    \r\n  }\r\n\r\n  const Message = styled.p`\r\n  color: ${ {text} ? \"#f46056\" : \"#f5f5f5\"}\r\n`;\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <div>\r\n        <h2>문제1-1.</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"김성용\"}\r\n          style={{ textAlign: \"center\" }}\r\n          onChange={onChange}\r\n        />\r\n        <S.Message> { text === true ? `올바르게 입력하셨습니다.` : `올바르게 입력해주세요` } </S.Message>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>문제1-2. </h2>\r\n        <button>보이기</button>\r\n        <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q1;\r\n\r\n\r\n\r\nconst S = {\r\n  Message,\r\n};\r\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,SAASC,EAAE,GAAG;EAAA;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EASE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAGzC,MAAMK,QAAQ,GAAIC,CAAC,IAAK;IACtB,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACjC,MAAMC,OAAO,GAAGJ,CAAC,CAACE,MAAM,CAACG,WAAW;IAEnCJ,UAAU,KAAKG,OAAO,GAAIN,OAAO,CAAC,IAAI,CAAC,GAAGA,OAAO,CAAC,KAAK,CAAC;EAE3D,CAAC;EAED,MAAMQ,OAAO,GAAGX,MAAM,CAACY,CAAE;AAC3B,WAAY;IAACV;EAAI,CAAC,GAAG,SAAS,GAAG,SAAU;AAC3C,CAAC;EAEC,oBACE;IAAA,wBACE;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,wBACE;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAE,KAAM;QACnB,KAAK,EAAE;UAAEW,SAAS,EAAE;QAAS,CAAE;QAC/B,QAAQ,EAAET;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB,eACF,QAAC,CAAC,CAAC,OAAO;QAAA,WAAC,GAAC,EAAEF,IAAI,KAAK,IAAI,GAAI,eAAc,GAAI,aAAY,EAAE,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE,eAEN;MAAA,wBACE;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAA,UAAQ;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eACpB;QAAA,UAAG;MAA2B;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA,gBACL;AAEP;AAAC,GA7DQD,EAAE;AAAA,KAAFA,EAAE;AA8DX,eAAeA,EAAE;AAIjB,MAAMa,CAAC,GAAG;EACRH;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}