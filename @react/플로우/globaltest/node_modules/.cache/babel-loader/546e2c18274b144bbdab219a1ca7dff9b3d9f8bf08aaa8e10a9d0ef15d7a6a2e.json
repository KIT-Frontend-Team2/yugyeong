{"ast":null,"code":"// \n// 액션은 디스패치의 내용을 수령한다. \n// state는 처음에 보낸 초기값이 담겨있음으로 불변성을 지켜야한다. \n\nconst reducer = (state, action) => {\n  console.log(state, action);\n  // switch(action.type) {\n  //   case 'ADD_MENU':\n  //     const { name, value } = action.payload;\n  //     return {\n  //       ...state,\n  //       inputValue: {\n  //         ...state.inputValue,\n  //         name : \"\"\n  //       },\n  //     };\n  //   case 'DELETE_MENU':\n  //     const { id } = action.payload;\n  //     return {\n  //       ...state,\n  //       ingredients: state.ingredients.filter((item) => item.id !== id),\n  //     };\n  //   default:\n  //     return state;\n  // }\n};\n\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","console","log"],"sources":["E:/git/@react/플로우/globaltest/src/store/1_reducer.js"],"sourcesContent":["\r\n// \r\n// 액션은 디스패치의 내용을 수령한다. \r\n// state는 처음에 보낸 초기값이 담겨있음으로 불변성을 지켜야한다. \r\n\r\nconst reducer = (state, action)=> {\r\n  console.log(state,action)\r\n  // switch(action.type) {\r\n  //   case 'ADD_MENU':\r\n  //     const { name, value } = action.payload;\r\n  //     return {\r\n  //       ...state,\r\n  //       inputValue: {\r\n  //         ...state.inputValue,\r\n  //         name : \"\"\r\n  //       },\r\n  //     };\r\n  //   case 'DELETE_MENU':\r\n  //     const { id } = action.payload;\r\n  //     return {\r\n  //       ...state,\r\n  //       ingredients: state.ingredients.filter((item) => item.id !== id),\r\n  //     };\r\n  //   default:\r\n  //     return state;\r\n  // }\r\n}\r\n\r\nexport default reducer"],"mappings":"AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAI;EAChCC,OAAO,CAACC,GAAG,CAACH,KAAK,EAACC,MAAM,CAAC;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}